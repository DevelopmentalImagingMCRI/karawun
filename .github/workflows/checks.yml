# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: KarawunTesting

on:
  push:
  pull_request:
    branches:
      - master
      - release
      - dev
  release:
    types: [published]

jobs:
  testmatrix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "${{ matrix.python }}"
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest -s tests/
    - name: Print branch name
      run: echo ${{ github.ref }}
  all_tests_successful:
    runs-on: ubuntu-latest
    needs: testmatrix
    steps:
    - run: echo Done!        
  packageupload:
    if:  ${{ github.event_name == 'release' && github.event.action == 'published' && github.ref == 'refs/heads/release' }} 
    needs: all_tests_successful
    strategy:
      matrix:
        python: [3.6]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "${{ matrix.python }}"
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade build
        python3 -m pip install --upgrade versioneer
        python3 -m pip install --upgrade wheel        
    - name: Build package
      run: |
        python3 setup.py bdist_wheel sdist
    - name: Publish to test
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.TESTPYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish to pypi
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

